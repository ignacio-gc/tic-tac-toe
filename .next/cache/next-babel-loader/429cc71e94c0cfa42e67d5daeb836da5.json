{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nacho/prog/next/tic-tac-toe/components/rust.js\";\nimport dynamic from \"next/dynamic\";\nimport { useState } from 'react';\nconst Rust = dynamic({\n  loader: async () => {\n    const rust = await import('../pkg');\n    return props => {\n      const {\n        0: board,\n        1: setBoard\n      } = useState(\"0 0 0 0 0 0 0 0 0\");\n\n      const handleSubmit = event => {\n        event.preventDefault();\n        let b = event.target.elements.board.value.split(' '); // const move = rust.solve(b)\n\n        alert(\"mejor movimieto: \" + b + Array.isArray(b));\n      };\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: board\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"board\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    };\n  },\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../pkg')],\n    modules: ['../pkg']\n  }\n});\nexport default Rust;","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/components/rust.js"],"names":["dynamic","useState","Rust","loader","rust","props","board","setBoard","handleSubmit","event","preventDefault","b","target","elements","value","split","alert","Array","isArray"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,MAAMC,IAAI,GAAGF,OAAO,CAAC;AACnBG,EAAAA,MAAM,EAAE,YAAY;AAClB,UAAMC,IAAI,GAAG,MAAM,OAAO,QAAP,CAAnB;AAEA,WACGC,KAAD,IAAW;AACT,YAAM;AAAA,WAACC,KAAD;AAAA,WAAQC;AAAR,UAAoBN,QAAQ,CAAC,mBAAD,CAAlC;;AAEA,YAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9BA,QAAAA,KAAK,CAACC,cAAN;AACA,YAAIC,CAAC,GAAGF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBP,KAAtB,CAA4BQ,KAA5B,CAAkCC,KAAlC,CAAwC,GAAxC,CAAR,CAF8B,CAG9B;;AACAC,QAAAA,KAAK,CAAC,sBAAsBL,CAAtB,GAA0BM,KAAK,CAACC,OAAN,CAAcP,CAAd,CAA3B,CAAL;AACD,OALD;;AAOA,0BACE;AAAA,gCACE;AAAA,oBAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,QAAQ,EAAEE,YAAhB;AAAA,iCACE;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADF;AAQD,KAnBH;AAoBD,GAxBkB;AAAA;AAAA,wCAES,QAFT;AAAA,cAES,QAFT;AAAA;AAAA,CAAD,CAApB;AA2BA,eAAeN,IAAf","sourcesContent":["import dynamic from \"next/dynamic\"\nimport { useState } from 'react'\n\nconst Rust = dynamic({\n  loader: async () => {\n    const rust = await import('../pkg')\n\n    return (\n      (props) => {\n        const [board, setBoard] = useState(\"0 0 0 0 0 0 0 0 0\")\n\n        const handleSubmit = (event) => {\n          event.preventDefault()\n          let b = event.target.elements.board.value.split(' ')\n          // const move = rust.solve(b)\n          alert(\"mejor movimieto: \" + b + Array.isArray(b))\n        }\n\n        return (\n          <>\n            <p>{board}</p>\n            <form onSubmit={handleSubmit}>\n              <input name=\"board\" type=\"text\" />\n            </form>\n          </>\n        )\n      })\n  },\n})\n\nexport default Rust"]},"metadata":{},"sourceType":"module"}