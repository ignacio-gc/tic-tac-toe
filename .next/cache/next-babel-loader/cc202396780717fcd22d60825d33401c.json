{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nacho/prog/next/tic-tac-toe/components/rust.js\",\n    _this = this;\n\nimport dynamic from \"next/dynamic\";\nimport { useState } from 'react';\nvar Rust = dynamic({\n  loader: function () {\n    var _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var rust;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return import('../pkg');\n\n            case 2:\n              rust = _context.sent;\n              return _context.abrupt(\"return\", function (props) {\n                var handleSubmit = function handleSubmit(event) {\n                  var move = rust.solve(input.current.value.split(' '));\n                  alert(\"mejor movimieto: \" + move);\n                  event.preventDefault();\n                };\n\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleSubmit,\n                    children: [\"Board:\", /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 22,\n                        columnNumber: 17\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 21,\n                      columnNumber: 15\n                    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"submit\",\n                      value: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 26,\n                      columnNumber: 15\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 19,\n                    columnNumber: 13\n                  }, _this)\n                }, void 0, false);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loader() {\n      return _loader.apply(this, arguments);\n    }\n\n    return loader;\n  }(),\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../pkg')];\n    },\n    modules: ['../pkg']\n  }\n});\nexport default Rust;","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/components/rust.js"],"names":["dynamic","useState","Rust","loader","rust","props","handleSubmit","event","move","solve","input","current","value","split","alert","preventDefault"],"mappings":";;;;;;;;AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,IAAMC,IAAI,GAAGF,OAAO,CAAC;AACnBG,EAAAA,MAAM;AAAA,2EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACa,OAAO,QAAP,CADb;;AAAA;AACAC,cAAAA,IADA;AAAA,+CAIJ,UAACC,KAAD,EAAW;AAET,oBAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,sBAAMC,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWC,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoBC,KAApB,CAA0B,GAA1B,CAAX,CAAb;AACAC,kBAAAA,KAAK,CAAC,sBAAsBN,IAAvB,CAAL;AACAD,kBAAAA,KAAK,CAACQ,cAAN;AACD,iBAJD;;AAMA,oCACE;AAAA,yCACE;AAAM,oBAAA,QAAQ,EAAET,YAAhB;AAAA,sDAEE;AAAA,6CACE;AACE,wBAAA,IAAI,EAAC;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,6BAFF,eAOE;AAAO,sBAAA,IAAI,EAAC,QAAZ;AAAqB,sBAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,6BAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,iCADF;AAaD,eAzBG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADa;AAAA;AAAA;AAAA,kCAES,QAFT;AAAA;AAAA,cAES,QAFT;AAAA;AAAA,CAAD,CAApB;AA8BA,eAAeJ,IAAf","sourcesContent":["import dynamic from \"next/dynamic\"\nimport { useState } from 'react'\n\nconst Rust = dynamic({\n  loader: async () => {\n    const rust = await import('../pkg')\n\n    return (\n      (props) => {\n\n        const handleSubmit = (event) => {\n          const move = rust.solve(input.current.value.split(' '))\n          alert(\"mejor movimieto: \" + move)\n          event.preventDefault()\n        }\n\n        return (\n          <>\n            <form onSubmit={handleSubmit}>\n              Board:\n              <label>\n                <input\n                  type=\"text\"\n                />\n              </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          </>\n        )\n      })\n  },\n})\n\nexport default Rust"]},"metadata":{},"sourceType":"module"}