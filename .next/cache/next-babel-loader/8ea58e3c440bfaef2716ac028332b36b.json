{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nacho/prog/next/tic-tac-toe/components/rust.js\",\n    _this = this;\n\nimport dynamic from \"next/dynamic\";\nvar Rust = dynamic({\n  loader: function () {\n    var _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var rust;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return import('../pkg/tic_tac_toe_bg.wasm');\n\n            case 2:\n              rust = _context.sent;\n              return _context.abrupt(\"return\", function (props) {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: rust.num()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 11,\n                    columnNumber: 13\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: rust.greet(\"nacho\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 12,\n                    columnNumber: 13\n                  }, _this)]\n                }, void 0, true);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loader() {\n      return _loader.apply(this, arguments);\n    }\n\n    return loader;\n  }(),\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../pkg/tic_tac_toe_bg.wasm')];\n    },\n    modules: ['../pkg/tic_tac_toe_bg.wasm']\n  }\n});\nexport default Rust;","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/components/rust.js"],"names":["dynamic","Rust","loader","rust","props","num","greet"],"mappings":";;;;;;;;AAAA,OAAOA,OAAP,MAAoB,cAApB;AAEA,IAAMC,IAAI,GAAGD,OAAO,CAAC;AACnBE,EAAAA,MAAM;AAAA,2EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACa,OAAO,4BAAP,CADb;;AAAA;AACAC,cAAAA,IADA;AAAA,+CAIJ,UAACC,KAAD,EAAW;AACT,oCACE;AAAA,0CACE;AAAA,8BAAMD,IAAI,CAACE,GAAL;AAAN;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAA,8BAAMF,IAAI,CAACG,KAAL,CAAW,OAAX;AAAN;AAAA;AAAA;AAAA;AAAA,2BAFF;AAAA,gCADF;AAMD,eAXG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADa;AAAA;AAAA;AAAA,kCAES,4BAFT;AAAA;AAAA,cAES,4BAFT;AAAA;AAAA,CAAD,CAApB;AAgBA,eAAeL,IAAf","sourcesContent":["import dynamic from \"next/dynamic\"\n\nconst Rust = dynamic({\n  loader: async () => {\n    const rust = await import('../pkg/tic_tac_toe_bg.wasm')\n\n    return (\n      (props) => {\n        return (\n          <>\n            <div>{rust.num()}</div>\n            <div>{rust.greet(\"nacho\")}</div>\n          </>\n        )\n      })\n  },\n})\n\nexport default Rust"]},"metadata":{},"sourceType":"module"}