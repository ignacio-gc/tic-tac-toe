{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nacho/prog/next/tic-tac-toe/components/rust.js\";\nimport dynamic from \"next/dynamic\";\nimport { useState } from 'react';\nconst Rust = dynamic({\n  loader: async () => {\n    const rust = await import('../pkg');\n    return props => {\n      const handleSubmit = event => {\n        const move = rust.solve(input.current.value.split(' '));\n        alert(\"mejor movimieto: \" + move);\n        event.preventDefault();\n      };\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [\"Board:\", /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    };\n  },\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../pkg')],\n    modules: ['../pkg']\n  }\n});\nexport default Rust;","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/components/rust.js"],"names":["dynamic","useState","Rust","loader","rust","props","handleSubmit","event","move","solve","input","current","value","split","alert","preventDefault"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,MAAMC,IAAI,GAAGF,OAAO,CAAC;AACnBG,EAAAA,MAAM,EAAE,YAAY;AAClB,UAAMC,IAAI,GAAG,MAAM,OAAO,QAAP,CAAnB;AAEA,WACGC,KAAD,IAAW;AAET,YAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,cAAMC,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWC,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoBC,KAApB,CAA0B,GAA1B,CAAX,CAAb;AACAC,QAAAA,KAAK,CAAC,sBAAsBN,IAAvB,CAAL;AACAD,QAAAA,KAAK,CAACQ,cAAN;AACD,OAJD;;AAMA,0BACE;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAET,YAAhB;AAAA,4CAEE;AAAA,mCACE;AACE,cAAA,IAAI,EAAC;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAOE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAaD,KAtBH;AAuBD,GA3BkB;AAAA;AAAA,wCAES,QAFT;AAAA,cAES,QAFT;AAAA;AAAA,CAAD,CAApB;AA8BA,eAAeJ,IAAf","sourcesContent":["import dynamic from \"next/dynamic\"\nimport { useState } from 'react'\n\nconst Rust = dynamic({\n  loader: async () => {\n    const rust = await import('../pkg')\n\n    return (\n      (props) => {\n\n        const handleSubmit = (event) => {\n          const move = rust.solve(input.current.value.split(' '))\n          alert(\"mejor movimieto: \" + move)\n          event.preventDefault()\n        }\n\n        return (\n          <>\n            <form onSubmit={handleSubmit}>\n              Board:\n              <label>\n                <input\n                  type=\"text\"\n                />\n              </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          </>\n        )\n      })\n  },\n})\n\nexport default Rust"]},"metadata":{},"sourceType":"module"}