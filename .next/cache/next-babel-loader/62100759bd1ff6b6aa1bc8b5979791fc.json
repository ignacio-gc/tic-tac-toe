{"ast":null,"code":"import * as wasm from './tic_tac_toe_bg.wasm';\nvar lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nvar cachedTextDecoder = new lTextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nvar cachegetUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nvar WASM_VECTOR_LEN = 0;\nvar lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nvar cachedTextEncoder = new lTextEncoder('utf-8');\nvar encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  var buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    var buf = cachedTextEncoder.encode(arg);\n\n    var _ptr = malloc(buf.length);\n\n    getUint8Memory0().subarray(_ptr, _ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return _ptr;\n  }\n\n  var len = arg.length;\n  var ptr = malloc(len);\n  var mem = getUint8Memory0();\n  var offset = 0;\n\n  for (; offset < len; offset++) {\n    var code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n\n    ptr = realloc(ptr, len, len = offset + arg.length * 3);\n    var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    var ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n/**\n* @param {string} name\n*/\n\n\nexport function greet(name) {\n  var ptr0 = passStringToWasm0(name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  wasm.greet(ptr0, len0);\n}\n/**\n* @param {number} n\n* @returns {number}\n*/\n\nexport function num(n) {\n  var ret = wasm.num(n);\n  return ret;\n}\nexport var __wbg_alert_28ef4d885b5d6bbd = function __wbg_alert_28ef4d885b5d6bbd(arg0, arg1) {\n  alert(getStringFromWasm0(arg0, arg1));\n};","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/pkg/tic_tac_toe_bg.js"],"names":["wasm","lTextDecoder","TextDecoder","module","require","cachedTextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","lTextEncoder","TextEncoder","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","length","written","passStringToWasm0","malloc","realloc","undefined","mem","offset","code","charCodeAt","slice","ret","greet","name","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","num","n","__wbg_alert_28ef4d885b5d6bbd","arg0","arg1","alert"],"mappings":"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","sourcesContent":["import * as wasm from './tic_tac_toe_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @param {string} name\n*/\nexport function greet(name) {\n    var ptr0 = passStringToWasm0(name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.greet(ptr0, len0);\n}\n\n/**\n* @param {number} n\n* @returns {number}\n*/\nexport function num(n) {\n    var ret = wasm.num(n);\n    return ret;\n}\n\nexport const __wbg_alert_28ef4d885b5d6bbd = function(arg0, arg1) {\n    alert(getStringFromWasm0(arg0, arg1));\n};\n\n"]},"metadata":{},"sourceType":"module"}