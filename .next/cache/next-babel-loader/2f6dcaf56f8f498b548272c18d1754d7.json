{"ast":null,"code":"import * as wasm from './tic_tac_toe_bg.wasm';\nvar lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nvar cachedTextDecoder = new lTextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nvar cachegetUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nvar heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\nvar heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  var idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nvar WASM_VECTOR_LEN = 0;\nvar lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nvar cachedTextEncoder = new lTextEncoder('utf-8');\nvar encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  var buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    var buf = cachedTextEncoder.encode(arg);\n\n    var _ptr = malloc(buf.length);\n\n    getUint8Memory0().subarray(_ptr, _ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return _ptr;\n  }\n\n  var len = arg.length;\n  var ptr = malloc(len);\n  var mem = getUint8Memory0();\n  var offset = 0;\n\n  for (; offset < len; offset++) {\n    var code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n\n    ptr = realloc(ptr, len, len = offset + arg.length * 3);\n    var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    var ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nvar cachegetInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n  if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n\n  return cachegetInt32Memory0;\n}\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  var ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n/**\n*/\n\n\nexport function init_panic_hook() {\n  wasm.init_panic_hook();\n}\n/**\n* @returns {any}\n*/\n\nexport function initial_state_to_js() {\n  var ret = wasm.initial_state_to_js();\n  return takeObject(ret);\n}\n/**\n* @returns {number}\n*/\n\nexport function number() {\n  var ret = wasm.number();\n  return ret >>> 0;\n}\nvar stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n  if (stack_pointer == 1) throw new Error('out of js stack');\n  heap[--stack_pointer] = obj;\n  return stack_pointer;\n}\n/**\n* @param {any} board\n* @returns {number}\n*/\n\n\nexport function solve(board) {\n  try {\n    var ret = wasm.solve(addBorrowedObject(board));\n    return ret >>> 0;\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\nexport var __wbindgen_json_parse = function __wbindgen_json_parse(arg0, arg1) {\n  var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n  return addHeapObject(ret);\n};\nexport var __wbindgen_json_serialize = function __wbindgen_json_serialize(arg0, arg1) {\n  var obj = getObject(arg1);\n  var ret = JSON.stringify(obj === undefined ? null : obj);\n  var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  getInt32Memory0()[arg0 / 4 + 1] = len0;\n  getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\nexport var __wbindgen_object_drop_ref = function __wbindgen_object_drop_ref(arg0) {\n  takeObject(arg0);\n};\nexport var __wbg_new_59cb74e423758ede = function __wbg_new_59cb74e423758ede() {\n  var ret = new Error();\n  return addHeapObject(ret);\n};\nexport var __wbg_stack_558ba5917b466edd = function __wbg_stack_558ba5917b466edd(arg0, arg1) {\n  var ret = getObject(arg1).stack;\n  var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  getInt32Memory0()[arg0 / 4 + 1] = len0;\n  getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\nexport var __wbg_error_4bb6c2a97407129a = function __wbg_error_4bb6c2a97407129a(arg0, arg1) {\n  try {\n    console.error(getStringFromWasm0(arg0, arg1));\n  } finally {\n    wasm.__wbindgen_free(arg0, arg1);\n  }\n};\nexport var __wbindgen_throw = function __wbindgen_throw(arg0, arg1) {\n  throw new Error(getStringFromWasm0(arg0, arg1));\n};","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/pkg/tic_tac_toe_bg.js"],"names":["wasm","lTextDecoder","TextDecoder","module","require","cachedTextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","WASM_VECTOR_LEN","lTextEncoder","TextEncoder","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","ret","cachegetInt32Memory0","getInt32Memory0","Int32Array","dropObject","takeObject","init_panic_hook","initial_state_to_js","number","stack_pointer","addBorrowedObject","Error","solve","board","__wbindgen_json_parse","arg0","arg1","JSON","parse","__wbindgen_json_serialize","stringify","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","__wbindgen_object_drop_ref","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_free","__wbindgen_throw"],"mappings":"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","sourcesContent":["import * as wasm from './tic_tac_toe_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n*/\nexport function init_panic_hook() {\n    wasm.init_panic_hook();\n}\n\n/**\n* @returns {any}\n*/\nexport function initial_state_to_js() {\n    var ret = wasm.initial_state_to_js();\n    return takeObject(ret);\n}\n\n/**\n* @returns {number}\n*/\nexport function number() {\n    var ret = wasm.number();\n    return ret >>> 0;\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* @param {any} board\n* @returns {number}\n*/\nexport function solve(board) {\n    try {\n        var ret = wasm.solve(addBorrowedObject(board));\n        return ret >>> 0;\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_json_serialize = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"]},"metadata":{},"sourceType":"module"}