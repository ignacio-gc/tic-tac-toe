{"ast":null,"code":"import * as wasm from './tic_tac_toe_bg.wasm';\nvar lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nvar cachedTextDecoder = new lTextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nvar cachegetUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nvar heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\nvar heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  var idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  var ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n/**\n* @returns {any}\n*/\n\n\nexport function initial_state() {\n  var ret = wasm.initial_state();\n  return takeObject(ret);\n}\n/**\n*/\n\nexport var Square = Object.freeze({\n  Empty: 0,\n  \"0\": \"Empty\",\n  X: 1,\n  \"1\": \"X\",\n  O: 2,\n  \"2\": \"O\"\n});\nexport var __wbindgen_json_parse = function __wbindgen_json_parse(arg0, arg1) {\n  var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n  return addHeapObject(ret);\n};\nexport var __wbindgen_throw = function __wbindgen_throw(arg0, arg1) {\n  throw new Error(getStringFromWasm0(arg0, arg1));\n};","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/pkg/tic_tac_toe_bg.js"],"names":["wasm","lTextDecoder","TextDecoder","module","require","cachedTextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","dropObject","takeObject","ret","initial_state","Square","Object","freeze","Empty","X","O","__wbindgen_json_parse","arg0","arg1","JSON","parse","__wbindgen_throw","Error"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,uBAAtB;AAEA,IAAMC,YAAY,GAAG,OAAOC,WAAP,KAAuB,WAAvB,GAAqC,CAAC,GAAGC,MAAM,CAACC,OAAX,EAAoB,MAApB,EAA4BF,WAAjE,GAA+EA,WAApG;AAEA,IAAIG,iBAAiB,GAAG,IAAIJ,YAAJ,CAAiB,OAAjB,EAA0B;AAAEK,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAA1B,CAAxB;AAEAF,iBAAiB,CAACG,MAAlB;AAEA,IAAIC,oBAAoB,GAAG,IAA3B;;AACA,SAASC,eAAT,GAA2B;AACvB,MAAID,oBAAoB,KAAK,IAAzB,IAAiCA,oBAAoB,CAACE,MAArB,KAAgCX,IAAI,CAACY,MAAL,CAAYD,MAAjF,EAAyF;AACrFF,IAAAA,oBAAoB,GAAG,IAAII,UAAJ,CAAeb,IAAI,CAACY,MAAL,CAAYD,MAA3B,CAAvB;AACH;;AACD,SAAOF,oBAAP;AACH;;AAED,SAASK,kBAAT,CAA4BC,GAA5B,EAAiCC,GAAjC,EAAsC;AAClC,SAAOX,iBAAiB,CAACG,MAAlB,CAAyBE,eAAe,GAAGO,QAAlB,CAA2BF,GAA3B,EAAgCA,GAAG,GAAGC,GAAtC,CAAzB,CAAP;AACH;;AAED,IAAME,IAAI,GAAG,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmBC,SAAnB,CAAb;AAEAH,IAAI,CAACI,IAAL,CAAUD,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,KAAjC;AAEA,IAAIE,SAAS,GAAGL,IAAI,CAACM,MAArB;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AACxB,MAAIH,SAAS,KAAKL,IAAI,CAACM,MAAvB,EAA+BN,IAAI,CAACI,IAAL,CAAUJ,IAAI,CAACM,MAAL,GAAc,CAAxB;AAC/B,MAAMG,GAAG,GAAGJ,SAAZ;AACAA,EAAAA,SAAS,GAAGL,IAAI,CAACS,GAAD,CAAhB;AAEAT,EAAAA,IAAI,CAACS,GAAD,CAAJ,GAAYD,GAAZ;AACA,SAAOC,GAAP;AACH;;AAED,SAASC,SAAT,CAAmBD,GAAnB,EAAwB;AAAE,SAAOT,IAAI,CAACS,GAAD,CAAX;AAAmB;;AAE7C,SAASE,UAAT,CAAoBF,GAApB,EAAyB;AACrB,MAAIA,GAAG,GAAG,EAAV,EAAc;AACdT,EAAAA,IAAI,CAACS,GAAD,CAAJ,GAAYJ,SAAZ;AACAA,EAAAA,SAAS,GAAGI,GAAZ;AACH;;AAED,SAASG,UAAT,CAAoBH,GAApB,EAAyB;AACrB,MAAMI,GAAG,GAAGH,SAAS,CAACD,GAAD,CAArB;AACAE,EAAAA,UAAU,CAACF,GAAD,CAAV;AACA,SAAOI,GAAP;AACH;AACD;AACA;AACA;;;AACA,OAAO,SAASC,aAAT,GAAyB;AAC5B,MAAID,GAAG,GAAG/B,IAAI,CAACgC,aAAL,EAAV;AACA,SAAOF,UAAU,CAACC,GAAD,CAAjB;AACH;AAED;AACA;;AACA,OAAO,IAAME,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc;AAAEC,EAAAA,KAAK,EAAC,CAAR;AAAU,OAAI,OAAd;AAAsBC,EAAAA,CAAC,EAAC,CAAxB;AAA0B,OAAI,GAA9B;AAAkCC,EAAAA,CAAC,EAAC,CAApC;AAAsC,OAAI;AAA1C,CAAd,CAAf;AAEP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAASC,IAAT,EAAeC,IAAf,EAAqB;AACtD,MAAIV,GAAG,GAAGW,IAAI,CAACC,KAAL,CAAW7B,kBAAkB,CAAC0B,IAAD,EAAOC,IAAP,CAA7B,CAAV;AACA,SAAOhB,aAAa,CAACM,GAAD,CAApB;AACH,CAHM;AAKP,OAAO,IAAMa,gBAAgB,GAAG,SAAnBA,gBAAmB,CAASJ,IAAT,EAAeC,IAAf,EAAqB;AACjD,QAAM,IAAII,KAAJ,CAAU/B,kBAAkB,CAAC0B,IAAD,EAAOC,IAAP,CAA5B,CAAN;AACH,CAFM","sourcesContent":["import * as wasm from './tic_tac_toe_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @returns {any}\n*/\nexport function initial_state() {\n    var ret = wasm.initial_state();\n    return takeObject(ret);\n}\n\n/**\n*/\nexport const Square = Object.freeze({ Empty:0,\"0\":\"Empty\",X:1,\"1\":\"X\",O:2,\"2\":\"O\", });\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"]},"metadata":{},"sourceType":"module"}