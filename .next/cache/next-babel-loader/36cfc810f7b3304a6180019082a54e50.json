{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nacho/prog/next/tic-tac-toe/components/rust.js\";\nimport dynamic from \"next/dynamic\";\nimport { useState } from 'react';\nconst Rust = dynamic({\n  loader: async () => {\n    const rust = await import('../pkg');\n    return props => {\n      const {\n        0: board,\n        1: setBoard\n      } = useState([0, 0, 0, 0, 0, 0, 0, 0]);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: rust.initial_state()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    };\n  },\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../pkg')],\n    modules: ['../pkg']\n  }\n});\nexport default Rust;","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/components/rust.js"],"names":["dynamic","useState","Rust","loader","rust","props","board","setBoard","initial_state"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAGA,MAAMC,IAAI,GAAGF,OAAO,CAAC;AACnBG,EAAAA,MAAM,EAAE,YAAY;AAClB,UAAMC,IAAI,GAAG,MAAM,OAAO,QAAP,CAAnB;AAEA,WACGC,KAAD,IAAW;AACT,YAAM;AAAA,WAACC,KAAD;AAAA,WAAQC;AAAR,UAAoBN,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAAD,CAAlC;AAEA,0BACE;AAAA,+BAGE;AAAA,oBAAMG,IAAI,CAACI,aAAL;AAAN;AAAA;AAAA;AAAA;AAAA;AAHF,uBADF;AAOD,KAXH;AAYD,GAhBkB;AAAA;AAAA,wCAES,QAFT;AAAA,cAES,QAFT;AAAA;AAAA,CAAD,CAApB;AAmBA,eAAeN,IAAf","sourcesContent":["import dynamic from \"next/dynamic\"\nimport { useState } from 'react'\n\n\nconst Rust = dynamic({\n  loader: async () => {\n    const rust = await import('../pkg')\n\n    return (\n      (props) => {\n        const [board, setBoard] = useState([0,0,0,0,0,0,0,0])\n\n        return (\n          <>\n            {/* <input onChange={e => setBoard()} /> */}\n            {/* <div>{rust.best(Uint32Array.from(board))}</div> */}\n            <div>{rust.initial_state()}</div>\n          </>\n        )\n      })\n  },\n})\n\nexport default Rust"]},"metadata":{},"sourceType":"module"}