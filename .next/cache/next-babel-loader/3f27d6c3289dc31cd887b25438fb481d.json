{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nacho/prog/next/tic-tac-toe/components/game.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Board from './board';\nimport { useState, useEffect } from 'react';\n\nvar Game = function Game() {\n  _s();\n\n  var _useState = useState([{\n    squares: Array(9).fill(null)\n  }]),\n      history = _useState[0],\n      setHistory = _useState[1];\n\n  var _useState2 = useState(0),\n      stepNumber = _useState2[0],\n      setStepNumber = _useState2[1];\n\n  var _useState3 = useState(true),\n      xIsNext = _useState3[0],\n      setXIsNext = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  var handleClick = function handleClick(i) {\n    var hist = history.slice(0, stepNumber + 1);\n    var current = hist[hist.length - 1];\n    var squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = xIsNext ? \"X\" : \"O\";\n    setHistory(hist.concat([{\n      squares: squares\n    }]));\n    setStepNumber(hist.length);\n    setXIsNext(!xIsNext);\n  };\n\n  var jumpTo = function jumpTo(step) {\n    setStepNumber(step);\n    setXIsNext(step % 2 === 0);\n  };\n\n  var moves = history.map(function (step, move) {\n    var desc = move ? 'Go to move #' + move : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return jumpTo(move);\n        },\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this);\n  });\n  var current = history[stepNumber];\n  var winner = calculateWinner(current.squares);\n  useEffect(function () {\n    current = history[stepNumber];\n    winner = calculateWinner(current.squares);\n\n    if (winner) {\n      setStatus(\"Winner: \" + winner);\n    } else {\n      setStatus(\"Next player: \" + (xIsNext ? \"X\" : \"O\"));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: current.squares,\n        onClick: function onClick(i) {\n          return handleClick(i);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Game, \"NlRiVKYibOQeRXnBZq9vxhEqmzQ=\");\n\n_c = Game;\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/components/game.js"],"names":["Board","useState","useEffect","Game","squares","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","status","setStatus","handleClick","i","hist","slice","current","length","calculateWinner","concat","jumpTo","step","moves","map","move","desc","winner","lines","a","b","c"],"mappings":"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","sourcesContent":["import Board from './board'\nimport { useState, useEffect } from 'react'\n\nconst Game = () => {\n  const [history, setHistory] = useState([{ squares: Array(9).fill(null) }]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [status, setStatus] = useState(\"\");\n\n  const handleClick = (i) => {\n    const hist = history.slice(0, stepNumber + 1);\n    const current = hist[hist.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = xIsNext ? \"X\" : \"O\";\n\n    setHistory(hist.concat([{ squares }]));\n    setStepNumber(hist.length);\n    setXIsNext(!xIsNext);\n  }\n\n  const jumpTo = (step) => {\n    setStepNumber(step);\n    setXIsNext((step % 2) === 0);\n  }\n\n\n  const moves = history.map((step, move) => {\n    const desc = move ?\n      'Go to move #' + move :\n      'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{desc}</button>\n      </li>\n    );\n  });\n\n  let current = history[stepNumber];\n  let winner = calculateWinner(current.squares);\n  useEffect(() => {\n    current = history[stepNumber];\n    winner = calculateWinner(current.squares);\n\n    if (winner) {\n      setStatus(\"Winner: \" + winner);\n    } else {\n      setStatus(\"Next player: \" + (xIsNext ? \"X\" : \"O\"));\n    }\n\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          squares={current.squares}\n          onClick={i => handleClick(i)}\n        />\n      </div>\n      <div className=\"game-info\">\n        <div>{status}</div>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}