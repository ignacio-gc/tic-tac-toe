{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport dynamic from \"next/dynamic\";\nimport { useState } from 'react';\nvar Rust = dynamic({\n  loader: function () {\n    var _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _s = $RefreshSig$();\n\n      var rust;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return import('../pkg');\n\n            case 2:\n              rust = _context.sent;\n              return _context.abrupt(\"return\", _s(function (props) {\n                _s();\n\n                var _useState = useState([0, 0, 0, 0, 0, 0, 0, 0]),\n                    board = _useState[0],\n                    setBoard = _useState[1];\n\n                return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n              }, \"Rx8L+iyrNpPyLG9dTRKFuF3F7e0=\"));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loader() {\n      return _loader.apply(this, arguments);\n    }\n\n    return loader;\n  }(),\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../pkg')];\n    },\n    modules: ['../pkg']\n  }\n});\nexport default Rust;","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/components/rust.js"],"names":["dynamic","useState","Rust","loader","rust","props","board","setBoard"],"mappings":";;;;AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,IAAMC,IAAI,GAAGF,OAAO,CAAC;AACnBG,EAAAA,MAAM;AAAA,2EAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACa,OAAO,QAAP,CADb;;AAAA;AACAC,cAAAA,IADA;AAAA,kDAIJ,UAACC,KAAD,EAAW;AAAA;;AAAA,gCACiBJ,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAAD,CADzB;AAAA,oBACFK,KADE;AAAA,oBACKC,QADL;;AAGT,oCACE,qCADF;AAKD,eAZG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADa;AAAA;AAAA;AAAA,kCAES,QAFT;AAAA;AAAA,cAES,QAFT;AAAA;AAAA,CAAD,CAApB;AAiBA,eAAeL,IAAf","sourcesContent":["import dynamic from \"next/dynamic\"\nimport { useState } from 'react'\n\nconst Rust = dynamic({\n  loader: async () => {\n    const rust = await import('../pkg')\n\n    return (\n      (props) => {\n        const [board, setBoard] = useState([0,0,0,0,0,0,0,0])\n\n        return (\n          <>\n            {/* <div>{rust.initial_state()}</div> */}\n          </>\n        )\n      })\n  },\n})\n\nexport default Rust"]},"metadata":{},"sourceType":"module"}