{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nacho/prog/next/tic-tac-toe/components/rust.js\",\n    _this = this;\n\nimport dynamic from \"next/dynamic\";\nimport { useState } from 'react';\nvar Rust = dynamic({\n  loader: function () {\n    var _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _s = $RefreshSig$();\n\n      var rust;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return import('../pkg');\n\n            case 2:\n              rust = _context.sent;\n              return _context.abrupt(\"return\", _s(function (props) {\n                _s();\n\n                var _useState = useState(\"0 0 0 0 0 0 0 0 0\"),\n                    board = _useState[0],\n                    setBoard = _useState[1];\n\n                var handleSubmit = function handleSubmit(event) {\n                  event.preventDefault();\n                  var move = rust.solve(event.target.elements.board.value.split(' '));\n                  alert(\"mejor movimieto: \" + move);\n                };\n\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: board\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 20,\n                    columnNumber: 13\n                  }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleSubmit,\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      name: \"board\",\n                      type: \"text\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 22,\n                      columnNumber: 15\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 21,\n                    columnNumber: 13\n                  }, _this)]\n                }, void 0, true);\n              }, \"WaSkbPTGhSb293bgAhWqo4YxDkc=\"));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loader() {\n      return _loader.apply(this, arguments);\n    }\n\n    return loader;\n  }(),\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../pkg')];\n    },\n    modules: ['../pkg']\n  }\n});\nexport default Rust;","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/components/rust.js"],"names":["dynamic","useState","Rust","loader","rust","props","board","setBoard","handleSubmit","event","preventDefault","move","solve","target","elements","value","split","alert"],"mappings":";;;;;;;;AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,IAAMC,IAAI,GAAGF,OAAO,CAAC;AACnBG,EAAAA,MAAM;AAAA,2EAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACa,OAAO,QAAP,CADb;;AAAA;AACAC,cAAAA,IADA;AAAA,kDAIJ,UAACC,KAAD,EAAW;AAAA;;AAAA,gCACiBJ,QAAQ,CAAC,mBAAD,CADzB;AAAA,oBACFK,KADE;AAAA,oBACKC,QADL;;AAGT,oBAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BA,kBAAAA,KAAK,CAACC,cAAN;AACA,sBAAMC,IAAI,GAAGP,IAAI,CAACQ,KAAL,CAAWH,KAAK,CAACI,MAAN,CAAaC,QAAb,CAAsBR,KAAtB,CAA4BS,KAA5B,CAAkCC,KAAlC,CAAwC,GAAxC,CAAX,CAAb;AACAC,kBAAAA,KAAK,CAAC,sBAAsBN,IAAvB,CAAL;AACD,iBAJD;;AAMA,oCACE;AAAA,0CACE;AAAA,8BAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAM,oBAAA,QAAQ,EAAEE,YAAhB;AAAA,2CACE;AAAO,sBAAA,IAAI,EAAC,OAAZ;AAAoB,sBAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,2BAFF;AAAA,gCADF;AAQD,eArBG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADa;AAAA;AAAA;AAAA,kCAES,QAFT;AAAA;AAAA,cAES,QAFT;AAAA;AAAA,CAAD,CAApB;AA0BA,eAAeN,IAAf","sourcesContent":["import dynamic from \"next/dynamic\"\nimport { useState } from 'react'\n\nconst Rust = dynamic({\n  loader: async () => {\n    const rust = await import('../pkg')\n\n    return (\n      (props) => {\n        const [board, setBoard] = useState(\"0 0 0 0 0 0 0 0 0\")\n\n        const handleSubmit = (event) => {\n          event.preventDefault()\n          const move = rust.solve(event.target.elements.board.value.split(' '))\n          alert(\"mejor movimieto: \" + move)\n        }\n\n        return (\n          <>\n            <p>{board}</p>\n            <form onSubmit={handleSubmit}>\n              <input name=\"board\" type=\"text\" />\n            </form>\n          </>\n        )\n      })\n  },\n})\n\nexport default Rust"]},"metadata":{},"sourceType":"module"}