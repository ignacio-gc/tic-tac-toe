{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nacho/prog/next/tic-tac-toe/pages/acerca.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Link from 'next/link';\nimport Prism from 'prismjs';\nimport { useEffect } from 'react';\nimport Layout from '../components/layout';\nimport 'prismjs/components/prism-rust';\nimport 'prismjs/components/prism-jsx';\nimport styles from './acerca.module.css';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Head from 'next/head';\n\nvar Acerca = function Acerca() {\n  _s();\n\n  var code = \"\\n  fn hola() -> u8 {\\n    let a = 2;    \\n    a\\n  }\";\n  var fragmentoIndexJs = \"\\nimport { withRouter } from 'next/router'\\nimport dynamic from 'next/dynamic'\\nimport Link from 'next/link'\\n\\nconst RustComponent = dynamic({\\n  loader: async () => {\\n    // Import the wasm module\\n    const rustModule = await import('../add.wasm')\\n    // Return a React component that calls the add_one method on the wasm module\\n    return (props) => <div>{rustModule.add_one(props.number)}</div>\\n  },\\n})\\n\\nconst Page = ({ router: { query } }) => {\\n  const number = parseInt(query.number || 30)\\n  return (\\n    <div>\\n      <RustComponent number={number} />\\n      <Link href={`/? number = ${number + 1}`}>\\n        <a>+</a>\\n      </Link>\\n    </div>\\n  )\\n} \";\n  var fragmentoRust = \"\\nconst GameOfLife = dynamic({\\n  loader: async () => {\\n    const rust = await import('../pkg')\\n\\n    // Return the React component using Webassembly\\n    return (\\n      (props) => {\\n        // useRef: if universe is used directly doen't work\\n        const universe = props.pattern\\n          ? useRef(rust.Universe.new_pattern(props.width, props.height, props.pattern))\\n          : useRef(rust.Universe.new(props.width, props.height))\\n        const [state, setState] = useState(0);\\n\\n        useEffect(() => {\\n          var timerID = setInterval(() => setState(state + 1), 250);\\n          universe.current.tick();\\n          return function cleanup() {\\n            clearInterval(timerID);\\n          };\\n        });\\n\\n        return (\\n          <>\\n            <pre className={styles.gol}>{universe.current.render()}</pre>\\n          </>\\n        )\\n      }\\n    )\\n    // end of component\\n  },\\n})\\n\";\n  useEffect(function () {\n    Prism.highlightAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"script\", {\n        async: true,\n        src: \"https://platform.twitter.com/widgets.js\",\n        charset: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.linkDiv,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: styles.link,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faArrowLeft\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 48\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 42\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.texto,\n          children: [\"Esta p\\xE1gina es mi primer intento de usar Webassembly (\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://webassembly.org/\",\n            children: \"Wasm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 67\n          }, _this), \") en \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://nextjs.org/\",\n            target: \"_\",\n            children: \"Next.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 20\n          }, _this), \". Para eso primero segu\\xED \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://rustwasm.github.io/docs/book/\",\n            target: \"_\",\n            children: \"este\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 34\n          }, _this), \" tutorial que implementa El Juego de la vida en Rust y lo compila a Wasm y busqu\\xE9 c\\xF3mo pod\\xEDa incorporarlo. Por suerte Next tiene soporte para Wasm.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.texto,\n          children: [\"El \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://es.wikipedia.org/wiki/Juego_de_la_vida\",\n            target: \"_\",\n            children: \"Juego de la vida\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 16\n          }, _this), \" (\", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Game of life\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 106\n          }, _this), \") es un aut\\xF3mata celular dise\\xF1ado por el matem\\xE1tico brit\\xE1nico John Horton Conway en 1970. Es un juego de cero jugadores, y consiste en una grilla infinita (como la de la p\\xE1gina anterior) donde cada casillero representa una \\\"c\\xE9lula\\\" que puede encontrarse en uno de dos estados: viva o muerta, poblada o despoblada, encendida o apagada, etc. Una vez establecido el patr\\xF3n inicial solamente queda ver c\\xF3mo evoluciona seg\\xFAn las siguientes reglas:\", /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Cualquier c\\xE9lula viva con menos de dos vecinas vivas muere en la siguiente generaci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Cualquier c\\xE9lula viva con dos o tres vecinas vivas sigue viva\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Cualquier c\\xE9lula viva con m\\xE1s de tres vecinas vivas muere\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Cualquier c\\xE9lula muerta con exactamente tres vecinas vivas pasa a estar viva\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.texto,\n          children: [\"Seg\\xFAn \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://developer.mozilla.org/es/docs/WebAssembly/Concepts\",\n            target: \"_\",\n            children: \"MDN web docs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, _this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Webassembly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 116\n          }, _this), \" es:\", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n              children: \"\\\"un nuevo tipo de c\\xF3digo que puede ser ejecutado en navegadores modernos, y provee nuevas funcionalidades y mejoras en rendimiento. No est\\xE1 pensado para ser ser escrito a mano, si no que est\\xE1 dise\\xF1ado par ser un objeto final de compilaci\\xF3n para lenguajes de bajo nivel como C, C++, Rust, etc.\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 14\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Un ejemplo reciente de las posibilidades que da es la mejora de rendimiento de TensorFlow.js gracias a Wasm:\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.tweet,\n              children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n                className: \"twitter-tweet\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  lang: \"en\",\n                  dir: \"ltr\",\n                  children: [\"\\uD83D\\uDD0B\\u26A1\\uFE0F Get supercharged with WebAssembly\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 116\n                  }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 125\n                  }, _this), \"In the latest update, supercharging the \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"https://twitter.com/hashtag/TensorFlowJS?src=hash&ref_src=twsrc%5Etfw\",\n                    children: \"#TensorFlowJS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 174\n                  }, _this), \" WebAssembly backend with SIMD and multi-threading can get up to a 10x performance boost for free. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 374\n                  }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 383\n                  }, _this), \"Learn more \\u2192 \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"https://t.co/ZKFWaxFAzE\",\n                    children: \"https://t.co/ZKFWaxFAzE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 405\n                  }, _this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"https://t.co/HM3dyliTND\",\n                    children: \"pic.twitter.com/HM3dyliTND\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 467\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 55\n                }, _this), \"\\u2014 TensorFlow (@TensorFlow) \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"https://twitter.com/TensorFlow/status/1301211668735811584?ref_src=twsrc%5Etfw\",\n                  children: \"September 2, 2020\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 568\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.rust-lang.org/\",\n            children: \"Rust\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, _this), \" tiene un buen soporte de Webassembly, con herramientas como wasm-bindgen que ayudan en la comunicaci\\xF3n con Javascript.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.texto,\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://nextjs.org/\",\n            target: \"_\",\n            children: \"Next.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, _this), \" es un framework basado en \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://es.reactjs.org/\",\n            children: \"React\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 92\n          }, _this), \" que permite hacer p\\xE1ginas web h\\xEDbridas tanto est\\xE1ticas como renderizadas en el lado del servidor (SSR).\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.texto,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Algunos puntos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, _this), \"Una vez que completamos el tutorial de Wasm y tenemos la implementaci\\xF3n del Juego de la vida la primer pregunta que surge si uno quire usar Next.js es \\xBFc\\xF3mo se integra?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.texto,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Comunicaci\\xF3n con Wasm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, _this), \"Dentro del repositorio de Next.js vamos a encontrar un ejemplo que se llama \\\"with-webassembly\\\" donde se muestra c\\xF3mo crear un componente con Wasm. Nos interesa el archivo \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/vercel/next.js/blob/canary/examples/with-webassembly/pages/index.js\",\n            children: \" index.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 35\n          }, _this), \" donde podemos ver c\\xF3mo se hace:\", /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: styles.codeBlock,\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"language-jsx\",\n              children: fragmentoIndexJs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 45\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, _this), \"Podemos ver que hay una linea con el path al archivo wasm: \", /*#__PURE__*/_jsxDEV(\"code\", {\n            className: styles.nb,\n            children: \"await import('../add.wasm')\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 70\n          }, _this), \" (o carpeta con archivos) y usa \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"dynamic import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 39\n          }, _this), \". A trav\\xE9s de la variable \", /*#__PURE__*/_jsxDEV(\"code\", {\n            className: styles.nb,\n            children: \"rustModule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 35\n          }, _this), \" vamos a poder acceder a las funciones que hayamos hecho p\\xFAblicas. La clave est\\xE1 en que el llamado a \", /*#__PURE__*/_jsxDEV(\"code\", {\n            className: styles.nb,\n            children: \"dynamic()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, _this), \" devuelve un componente React donde vamos a poder usar esas funciones.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.texto,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Animaci\\xF3n del juego\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, _this), \"El tutorial de Wasm implementa una primer soluci\\xF3n usando \", /*#__PURE__*/_jsxDEV(\"code\", {\n            className: styles.nb,\n            children: \" requestAnimationFrame()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 69\n          }, _this), \" para animar el juego pero como Next.js est\\xE1 basado en React despu\\xE9s de unos intentos us\\xE9 \", /*#__PURE__*/_jsxDEV(\"code\", {\n            className: styles.nb,\n            children: \"setInterval()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, _this), \" junto con \", /*#__PURE__*/_jsxDEV(\"code\", {\n            className: styles.nb,\n            children: \"useState\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 74\n          }, _this), \" para provocar el re renderizado incrementando un contador por cada generaci\\xF3n. Por otro lado el universo del juego est\\xE1 implementado usando un \", /*#__PURE__*/_jsxDEV(\"code\", {\n            className: styles.nb,\n            children: \"struct\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 75\n          }, _this), \" mutable que se modifica cada llamado a la funci\\xF3n \", /*#__PURE__*/_jsxDEV(\"code\", {\n            className: styles.nb,\n            children: \"tick()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 53\n          }, _this), \", que calcula cada nueva generaci\\xF3n.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.texto,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Componente que se comunica con Wasm:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 41\n          }, _this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: styles.codeBlock,\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"language-rust\",\n              children: fragmentoRust\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 47\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.texto,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"TODO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, _this), \"Adem\\xE1s de limpiar y mejorar muchas cosas algunas ideas para intentar:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Modificar la funci\\xF3n de Rust \", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: styles.nb,\n                children: \"new()\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 46\n              }, _this), \" para que acepte un patr\\xF3n para empezar el juego (en parte implementado en \", /*#__PURE__*/_jsxDEV(\"code\", {\n                className: styles.nb,\n                children: \"new_pattern()\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 75\n              }, _this), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Permitir ingresar un patron clickendo en una grilla en blanco\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Implementar un bot\\xF3n de \\\"start\\\" y \\\"stop\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Agregar una galer\\xEDa de patrones como \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://en.wikipedia.org/wiki/Glider_(Conway%27s_Life)\",\n                target: \"_\",\n                children: \"Glider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 54\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.linkDiv,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: styles.link,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faArrowLeft\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 48\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 42\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Acerca, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Acerca;\nexport default Acerca;\n\nvar _c;\n\n$RefreshReg$(_c, \"Acerca\");","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/pages/acerca.js"],"names":["Link","Prism","useEffect","Layout","styles","faArrowLeft","FontAwesomeIcon","Head","Acerca","code","fragmentoIndexJs","fragmentoRust","highlightAll","container","linkDiv","link","texto","tweet","codeBlock","nb"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport Prism from 'prismjs'\nimport { useEffect } from 'react'\nimport Layout from '../components/layout'\nimport 'prismjs/components/prism-rust'\nimport 'prismjs/components/prism-jsx'\nimport styles from './acerca.module.css'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Head from 'next/head'\n\nconst Acerca = () => {\n\n  const code = `\n  fn hola() -> u8 {\n    let a = 2;    \n    a\n  }`\n\n  const fragmentoIndexJs = `\nimport { withRouter } from 'next/router'\nimport dynamic from 'next/dynamic'\nimport Link from 'next/link'\n\nconst RustComponent = dynamic({\n  loader: async () => {\n    // Import the wasm module\n    const rustModule = await import('../add.wasm')\n    // Return a React component that calls the add_one method on the wasm module\n    return (props) => <div>{rustModule.add_one(props.number)}</div>\n  },\n})\n\nconst Page = ({ router: { query } }) => {\n  const number = parseInt(query.number || 30)\n  return (\n    <div>\n      <RustComponent number={number} />\n      <Link href={\\`/? number = \\${number + 1}\\`}>\n        <a>+</a>\n      </Link>\n    </div>\n  )\n} `\n\n  const fragmentoRust =\n    `\nconst GameOfLife = dynamic({\n  loader: async () => {\n    const rust = await import('../pkg')\n\n    // Return the React component using Webassembly\n    return (\n      (props) => {\n        // useRef: if universe is used directly doen't work\n        const universe = props.pattern\n          ? useRef(rust.Universe.new_pattern(props.width, props.height, props.pattern))\n          : useRef(rust.Universe.new(props.width, props.height))\n        const [state, setState] = useState(0);\n\n        useEffect(() => {\n          var timerID = setInterval(() => setState(state + 1), 250);\n          universe.current.tick();\n          return function cleanup() {\n            clearInterval(timerID);\n          };\n        });\n\n        return (\n          <>\n            <pre className={styles.gol}>{universe.current.render()}</pre>\n          </>\n        )\n      }\n    )\n    // end of component\n  },\n})\n`\n\n  useEffect(() => {\n    Prism.highlightAll();\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n      </Head>\n      <Layout>\n        <div className={styles.container}>\n          <div className={styles.linkDiv}>\n            <Link href=\"/\">\n              <a className={styles.link}><span><FontAwesomeIcon icon={faArrowLeft} /></span></a>\n            </Link>\n          </div>\n          <div className={styles.texto}>\n            Esta página es mi primer intento de usar Webassembly (<a href=\"https://webassembly.org/\">Wasm\n          </a>) en <a href=\"https://nextjs.org/\" target=\"_\">Next.js</a>.\n          Para eso primero seguí <a href=\"https://rustwasm.github.io/docs/book/\" target=\"_\">este</a> tutorial que implementa\n          El Juego de la vida en Rust y lo compila a Wasm y busqué cómo podía incorporarlo. Por suerte Next tiene soporte\n          para Wasm.\n        </div>\n          <div className={styles.texto}>\n            El <a href=\"https://es.wikipedia.org/wiki/Juego_de_la_vida\" target=\"_\">Juego de la vida</a> (<i>Game\n            of life</i>) es un autómata celular diseñado por el matemático británico John Horton Conway en 1970.\n            Es un juego de cero jugadores, y consiste en una grilla infinita (como la de la página anterior) donde\n            cada casillero representa una \"célula\" que puede encontrarse en uno de dos estados: viva o muerta, poblada o despoblada,\n            encendida o apagada, etc.\n            Una vez establecido el patrón inicial solamente queda ver cómo evoluciona según las siguientes reglas:\n          <ol>\n              <li>Cualquier célula viva con menos de dos vecinas vivas muere en la siguiente generación</li>\n              <li>Cualquier célula viva con dos o tres vecinas vivas sigue viva</li>\n              <li>Cualquier célula viva con más de tres vecinas vivas muere</li>\n              <li>Cualquier célula muerta con exactamente tres vecinas vivas pasa a estar viva</li>\n            </ol>\n          </div>\n          <div className={styles.texto}>\n            Según <a href=\"https://developer.mozilla.org/es/docs/WebAssembly/Concepts\" target=\"_\">MDN web docs</a> <b>Webassembly</b> es:\n          <p><blockquote>\"un nuevo tipo de código que puede ser ejecutado en navegadores modernos, y provee nuevas\n            funcionalidades y mejoras en rendimiento. No está pensado para ser ser escrito a mano, si no que está diseñado par\n          ser un objeto final de compilación para lenguajes de bajo nivel como C, C++, Rust, etc.\"</blockquote></p>\n            <p>\n              Un ejemplo reciente de las posibilidades que da es la mejora de rendimiento de TensorFlow.js gracias a Wasm:\n              <div className={styles.tweet}>\n                <blockquote className=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">🔋⚡️ Get supercharged with WebAssembly<br></br><br></br>In the latest update, supercharging the <a href=\"https://twitter.com/hashtag/TensorFlowJS?src=hash&amp;ref_src=twsrc%5Etfw\">#TensorFlowJS</a> WebAssembly backend with SIMD and multi-threading can get up to a 10x performance boost for free. <br></br><br></br>Learn more → <a href=\"https://t.co/ZKFWaxFAzE\">https://t.co/ZKFWaxFAzE</a> <a href=\"https://t.co/HM3dyliTND\">pic.twitter.com/HM3dyliTND</a></p>&mdash; TensorFlow (@TensorFlow) <a href=\"https://twitter.com/TensorFlow/status/1301211668735811584?ref_src=twsrc%5Etfw\">September 2, 2020</a></blockquote>\n              </div>\n            </p>\n            <a href=\"https://www.rust-lang.org/\">Rust</a> tiene un buen soporte de Webassembly, con herramientas como wasm-bindgen que ayudan en la comunicación\n          con Javascript.\n        </div>\n          <div className={styles.texto}>\n            <a href=\"https://nextjs.org/\" target=\"_\">Next.js</a> es un framework basado en <a href=\"https://es.reactjs.org/\">React\n          </a> que permite hacer páginas web híbridas tanto estáticas como renderizadas en el lado del servidor (SSR).\n        </div>\n          <div className={styles.texto}>\n            <h2>Algunos puntos</h2>\n            Una vez que completamos el tutorial de Wasm y tenemos la implementación del Juego de la vida la primer pregunta\n            que surge si uno quire usar Next.js es ¿cómo se integra?\n          </div>\n          <div className={styles.texto}>\n            <h3>Comunicación con Wasm</h3>\n          Dentro del repositorio de Next.js vamos a encontrar un\n          ejemplo que se llama \"with-webassembly\" donde se muestra cómo crear un componente con Wasm.\n          Nos interesa el archivo <a href=\"https://github.com/vercel/next.js/blob/canary/examples/with-webassembly/pages/index.js\"> index.js</a> donde\n          podemos ver cómo se hace:\n          <pre className={styles.codeBlock}><code className={\"language-jsx\"}>{fragmentoIndexJs}</code></pre>\n          Podemos ver que hay una linea con el path al archivo wasm: <code className={styles.nb}>await import('../add.wasm')</code> (o\n          carpeta con archivos) y usa <i>dynamic import</i>.\n          A través de la variable <code className={styles.nb}>rustModule</code> vamos a poder acceder a\n          las funciones que hayamos hecho públicas. La clave está en que el llamado\n          a <code className={styles.nb}>dynamic()</code> devuelve un componente React donde vamos a poder usar esas funciones.\n          </div>\n          <div className={styles.texto}>\n            <h3>Animación del juego</h3>\n          El tutorial de Wasm implementa una primer solución usando <code className={styles.nb}> requestAnimationFrame()\n          </code> para animar el juego pero como Next.js está basado en React después de unos intentos \n          usé <code className={styles.nb}>setInterval()</code> junto con <code className={styles.nb}>useState</code> para\n          provocar el re renderizado incrementando un contador por cada generación.\n          Por otro lado el universo del juego está implementado usando un <code className={styles.nb}>struct</code> mutable\n          que se modifica cada llamado a la función <code className={styles.nb}>tick()</code>\n          , que calcula cada nueva generación. \n        </div>\n          <div className={styles.texto}><p>Componente que se comunica con Wasm:</p>\n            <pre className={styles.codeBlock}><code className={\"language-rust\"}>{fragmentoRust}</code></pre></div>\n          <div className={styles.texto}>\n            <h2>TODO</h2>\n            Además de limpiar y mejorar muchas cosas algunas ideas para intentar:\n            <ul>\n              <li>\n                Modificar la función de Rust <code className={styles.nb}>new()</code> para que acepte\n                un patrón para empezar el juego (en parte implementado en <code className={styles.nb}>new_pattern()</code>)\n              </li>\n              <li>\n                Permitir ingresar un patron clickendo en una grilla en blanco\n              </li>\n              <li>\n                Implementar un botón de \"start\" y \"stop\"\n              </li>\n              <li>\n                Agregar una galería de patrones como <a href=\"https://en.wikipedia.org/wiki/Glider_(Conway%27s_Life)\" target=\"_\">Glider</a>\n              </li>\n            </ul>\n          </div>\n          <div className={styles.linkDiv}>\n            <Link href=\"/\">\n              <a className={styles.link}><span><FontAwesomeIcon icon={faArrowLeft} /></span></a>\n            </Link>\n          </div>\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nexport default Acerca"]},"metadata":{},"sourceType":"module"}