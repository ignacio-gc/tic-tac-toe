{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nacho/prog/next/tic-tac-toe/components/game.js\",\n    _this = this;\n\nimport dynamic from 'next/dynamic';\nimport Board from './board';\nimport { useState, useEffect } from 'react';\nvar Game = dynamic({\n  loader: function () {\n    var _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _s = $RefreshSig$();\n\n      var rustModule;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return import('../pkg');\n\n            case 2:\n              rustModule = _context.sent;\n              return _context.abrupt(\"return\", _s(function (props) {\n                _s();\n\n                var _useState = useState([{\n                  squares: Array(9).fill(null)\n                }]),\n                    history = _useState[0],\n                    setHistory = _useState[1];\n\n                var _useState2 = useState(0),\n                    stepNumber = _useState2[0],\n                    setStepNumber = _useState2[1];\n\n                var _useState3 = useState(true),\n                    xIsNext = _useState3[0],\n                    setXIsNext = _useState3[1];\n\n                var _useState4 = useState(\"\"),\n                    status = _useState4[0],\n                    setStatus = _useState4[1];\n\n                var handleClick = function handleClick(i) {\n                  var hist = history.slice(0, stepNumber + 1);\n                  var current = hist[hist.length - 1];\n                  var squares = current.squares.slice();\n\n                  if (calculateWinner(squares) || squares[i]) {\n                    return;\n                  }\n\n                  squares[i] = xIsNext ? \"X\" : \"O\"; // set the computer move\n                  // squares[move] = !xIsNext ? \"X\" : \"O\";\n\n                  setHistory(hist.concat([{\n                    squares: squares\n                  }]));\n                  setStepNumber(hist.length);\n                  setXIsNext(!xIsNext);\n                };\n\n                var jumpTo = function jumpTo(step) {\n                  setStepNumber(step);\n                  setXIsNext(step % 2 === 0);\n                };\n\n                var moves = history.map(function (step, move) {\n                  var desc = move ? 'Go to move #' + move : 'Go to game start';\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: function onClick() {\n                        return jumpTo(move);\n                      },\n                      children: desc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 44,\n                      columnNumber: 15\n                    }, _this)\n                  }, move, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 13\n                  }, _this);\n                });\n                var current = history[stepNumber];\n                var winner = calculateWinner(current.squares);\n                useEffect(function () {\n                  current = history[stepNumber];\n                  winner = calculateWinner(current.squares);\n\n                  if (winner) {\n                    setStatus(\"Winner: \" + winner);\n                  } else {\n                    setStatus(\"Next player: \" + (xIsNext ? \"X\" : \"O\"));\n                  }\n                });\n                var init = rustModule.initial_state_to_js();\n                var serde = rustModule.number();\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"game\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"game-board\",\n                    children: /*#__PURE__*/_jsxDEV(Board, {\n                      squares: current.squares,\n                      onClick: function onClick(i) {\n                        return handleClick(i);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 15\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 13\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"game-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 15\n                    }, _this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                      children: moves\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 15\n                    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [\"Init: \", init.board.map(function (n, idx) {\n                        return ' ' + n + idx + ' ';\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 15\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 13\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 11\n                }, _this);\n              }, \"NlRiVKYibOQeRXnBZq9vxhEqmzQ=\"));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function loader() {\n      return _loader.apply(this, arguments);\n    }\n\n    return loader;\n  }(),\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../pkg')];\n    },\n    modules: ['../pkg']\n  }\n});\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/components/game.js"],"names":["dynamic","Board","useState","useEffect","Game","loader","rustModule","props","squares","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","status","setStatus","handleClick","i","hist","slice","current","length","calculateWinner","concat","jumpTo","step","moves","map","move","desc","winner","init","initial_state_to_js","serde","number","board","n","idx","lines","a","b","c"],"mappings":"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","sourcesContent":["import dynamic from 'next/dynamic'\nimport Board from './board'\nimport { useState, useEffect } from 'react'\n\nconst Game = dynamic({\n  loader: async () => {\n    const rustModule = await import('../pkg')\n\n    return (\n      (props) => {\n        const [history, setHistory] = useState([{ squares: Array(9).fill(null) }]);\n        const [stepNumber, setStepNumber] = useState(0);\n        const [xIsNext, setXIsNext] = useState(true);\n        const [status, setStatus] = useState(\"\");\n\n        const handleClick = (i) => {\n          const hist = history.slice(0, stepNumber + 1);\n          const current = hist[hist.length - 1];\n          const squares = current.squares.slice();\n          if (calculateWinner(squares) || squares[i]) {\n            return;\n          }\n          squares[i] = xIsNext ? \"X\" : \"O\";\n          // set the computer move\n          // squares[move] = !xIsNext ? \"X\" : \"O\";\n\n          setHistory(hist.concat([{ squares }]));\n          setStepNumber(hist.length);\n          setXIsNext(!xIsNext);\n        }\n\n        const jumpTo = (step) => {\n          setStepNumber(step);\n          setXIsNext((step % 2) === 0);\n        }\n\n\n        const moves = history.map((step, move) => {\n          const desc = move ?\n            'Go to move #' + move :\n            'Go to game start';\n          return (\n            <li key={move}>\n              <button onClick={() => jumpTo(move)}>{desc}</button>\n            </li>\n          );\n        });\n\n        let current = history[stepNumber];\n        let winner = calculateWinner(current.squares);\n        useEffect(() => {\n          current = history[stepNumber];\n          winner = calculateWinner(current.squares);\n\n          if (winner) {\n            setStatus(\"Winner: \" + winner);\n          } else {\n            setStatus(\"Next player: \" + (xIsNext ? \"X\" : \"O\"));\n          }\n\n        });\n\n        const init = rustModule.initial_state_to_js()\n        const serde = rustModule.number()\n\n        return (\n          <div className=\"game\">\n            <div className=\"game-board\">\n              <Board\n                squares={current.squares}\n                onClick={i => handleClick(i)}\n              />\n            </div>\n            <div className=\"game-info\">\n              <div>{status}</div>\n              <ol>{moves}</ol>\n              <div>Init: {init.board.map((n, idx) => ' ' + n + idx + ' ')}</div>\n            </div>\n          </div>\n        );\n      })\n  },\n})\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}