{"ast":null,"code":"import * as wasm from './tic_tac_toe_bg.wasm';\nvar heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nvar heap_next = heap.length;\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  var ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nvar lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nvar cachedTextDecoder = new lTextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nvar cachegetUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  var idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\n\nvar WASM_VECTOR_LEN = 0;\nvar lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nvar cachedTextEncoder = new lTextEncoder('utf-8');\nvar encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  var buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    var buf = cachedTextEncoder.encode(arg);\n\n    var _ptr = malloc(buf.length);\n\n    getUint8Memory0().subarray(_ptr, _ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return _ptr;\n  }\n\n  var len = arg.length;\n  var ptr = malloc(len);\n  var mem = getUint8Memory0();\n  var offset = 0;\n\n  for (; offset < len; offset++) {\n    var code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n\n    ptr = realloc(ptr, len, len = offset + arg.length * 3);\n    var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    var ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nvar cachegetInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n  if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n\n  return cachegetInt32Memory0;\n}\n/**\n*/\n\n\nexport function init_panic_hook() {\n  wasm.init_panic_hook();\n}\n/**\n* @param {Array<any>} board\n* @returns {number}\n*/\n\nexport function solve(board) {\n  var ret = wasm.solve(addHeapObject(board));\n  return ret >>> 0;\n}\n/**\n* @returns {any}\n*/\n\nexport function initial_state() {\n  var ret = wasm.initial_state();\n  return takeObject(ret);\n}\nexport var __wbindgen_object_drop_ref = function __wbindgen_object_drop_ref(arg0) {\n  takeObject(arg0);\n};\nexport var __wbindgen_json_parse = function __wbindgen_json_parse(arg0, arg1) {\n  var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n  return addHeapObject(ret);\n};\nexport var __wbindgen_json_serialize = function __wbindgen_json_serialize(arg0, arg1) {\n  var obj = getObject(arg1);\n  var ret = JSON.stringify(obj === undefined ? null : obj);\n  var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  getInt32Memory0()[arg0 / 4 + 1] = len0;\n  getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\nexport var __wbg_new_59cb74e423758ede = function __wbg_new_59cb74e423758ede() {\n  var ret = new Error();\n  return addHeapObject(ret);\n};\nexport var __wbg_stack_558ba5917b466edd = function __wbg_stack_558ba5917b466edd(arg0, arg1) {\n  var ret = getObject(arg1).stack;\n  var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  getInt32Memory0()[arg0 / 4 + 1] = len0;\n  getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\nexport var __wbg_error_4bb6c2a97407129a = function __wbg_error_4bb6c2a97407129a(arg0, arg1) {\n  try {\n    console.error(getStringFromWasm0(arg0, arg1));\n  } finally {\n    wasm.__wbindgen_free(arg0, arg1);\n  }\n};\nexport var __wbindgen_throw = function __wbindgen_throw(arg0, arg1) {\n  throw new Error(getStringFromWasm0(arg0, arg1));\n};","map":{"version":3,"sources":["/home/nacho/prog/next/tic-tac-toe/pkg/tic_tac_toe_bg.js"],"names":["wasm","heap","Array","fill","undefined","push","getObject","idx","heap_next","length","dropObject","takeObject","ret","lTextDecoder","TextDecoder","module","require","cachedTextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","addHeapObject","obj","WASM_VECTOR_LEN","lTextEncoder","TextEncoder","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","init_panic_hook","solve","board","initial_state","__wbindgen_object_drop_ref","arg0","__wbindgen_json_parse","arg1","JSON","parse","__wbindgen_json_serialize","stringify","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","__wbg_new_59cb74e423758ede","Error","__wbg_stack_558ba5917b466edd","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_free","__wbindgen_throw"],"mappings":"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","sourcesContent":["import * as wasm from './tic_tac_toe_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nexport function init_panic_hook() {\n    wasm.init_panic_hook();\n}\n\n/**\n* @param {Array<any>} board\n* @returns {number}\n*/\nexport function solve(board) {\n    var ret = wasm.solve(addHeapObject(board));\n    return ret >>> 0;\n}\n\n/**\n* @returns {any}\n*/\nexport function initial_state() {\n    var ret = wasm.initial_state();\n    return takeObject(ret);\n}\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_json_serialize = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"]},"metadata":{},"sourceType":"module"}